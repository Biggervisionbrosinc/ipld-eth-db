version: '3.2'

services:
  access-node:
    image: timescale/timescaledb:latest-pg14
    restart: always
    container_name: access-node
    depends_on:
      - data-node-1
      - data-node-2
      - data-node-3
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "vulcanize_testing_v4"
      POSTGRES_PASSWORD: "password"
    ports:
      - "127.0.0.1:8066:5432"
    volumes:
      - ./scripts/init-access-node.sh:/docker-entrypoint-initdb.d/init-access-node.sh

  data-node-1:
    image: timescale/timescaledb:latest-pg14
    restart: unless-stopped
    container_name: data-node-1
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "vulcanize_testing_v4"
      POSTGRES_PASSWORD: "password"
    ports:
      - "127.0.0.1:8067:5432"
    volumes:
      - ./scripts/init-data-node.sh:/docker-entrypoint-initdb.d/init-data-node.sh

  data-node-2:
    image: timescale/timescaledb:latest-pg14
    restart: unless-stopped
    container_name: data-node-2
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "vulcanize_testing_v4"
      POSTGRES_PASSWORD: "password"
    ports:
      - "127.0.0.1:8068:5432"
    volumes:
      - ./scripts/init-data-node.sh:/docker-entrypoint-initdb.d/init-data-node.sh

  data-node-3:
    image: timescale/timescaledb:latest-pg14
    restart: unless-stopped
    container_name: data-node-3
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "vulcanize_testing_v4"
      POSTGRES_PASSWORD: "password"
    ports:
      - "127.0.0.1:8069:5432"
    volumes:
      - ./scripts/init-data-node.sh:/docker-entrypoint-initdb.d/init-data-node.sh
